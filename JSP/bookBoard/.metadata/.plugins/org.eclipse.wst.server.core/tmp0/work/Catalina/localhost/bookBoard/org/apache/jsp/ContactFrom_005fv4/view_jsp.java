/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-12-13 22:12:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ContactFrom_005fv4;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"icon\" type=\"image/png\" href=\"images/icons/favicon.ico\"/>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/css-hamburgers/hamburgers.min.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animsition/css/animsition.min.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/daterangepicker/daterangepicker.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\">\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tfunction getVal(mode)\n");
      out.write("\t\t{\n");
      out.write("\t\t\tvar theForm = document.bookFrame;\n");
      out.write("\t\t\tif(mode == \"00\"){\n");
      out.write("\t\t\t\ttheForm.action = \"modify.jsp\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse if(mode == \"01\"){\n");
      out.write("\t\t\t\ttheForm.action = \"delete.jsp\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\ttheForm.submit();\n");
      out.write("\t\t}\n");
      out.write("\t\n");
      out.write("\t</script>\n");
      out.write("\t");

	
		String session_stu_no = "";
		int tradenum = Integer.parseInt(request.getParameter("tradenum"));
		String seller = "";
		String seller_tel ="";
		String bookname ="";
		String publisher ="";
		String prof = "";
		String status = "";
		String summary = "";
		String stu_no = "";
		try{
			
			session_stu_no = (String)session.getAttribute("stu_no");
			Class.forName("com.mysql.jdbc.Driver");
			Connection conn = null;
			Statement stat	= null;
			ResultSet rs 	= null;
			
			String jdbcDriver = "jdbc:mysql://localhost:3306/bookDB?"+
								"useSSl=false&serverTimezone=UTC";
			
			String dbUser = "root";
			String dbPass = "1234";
			
			
			
			//2. 데이터베이스 커넥션 생성
			conn = DriverManager.getConnection(jdbcDriver,dbUser,dbPass);
			
			String sql = "SELECT seller, seller_tel, bookName, publisher, prof, status, summary, stu_no FROM BOOKINFO WHERE TRADENUM = " + tradenum;
			stat = conn.createStatement();
			rs = stat.executeQuery(sql);
			
			if(rs.next()){
				seller = rs.getString(1);
				seller_tel = rs.getString(2);
				bookname = rs.getString(3);
				publisher = rs.getString(4);
				prof = rs.getString(5);
				status = rs.getString(6);
				summary = rs.getString(7);
				stu_no = rs.getString(8);
			}
		}catch(Exception e){
			System.out.println(e.getMessage());
		}
	
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"container-contact100\">\n");
      out.write("\t\t<div class=\"wrap-contact100\">\n");
      out.write("\t\t\t<form name=\"bookFrame\" class=\"contact100-form validate-form\" action=\"modify.jsp\">\n");
      out.write("\t\t\t\t<span class=\"contact100-form-title\">\n");
      out.write("\t\t\t\t\tBOOK INFO\n");
      out.write("\t\t\t\t</span>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 validate-input\" data-validate=\"책 이름을 입력하세요.\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">판매자</span>\n");
      out.write("\t\t\t\t\t<input class=\"input100\" type=\"text\" name=\"seller\" value=\"");
      out.print(seller );
      out.write("\" readonly>\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"tradenum\" value=\"");
      out.print(tradenum );
      out.write("\"/>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 validate-input\" data-validate=\"책 이름을 입력하세요.\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">연락처</span>\n");
      out.write("\t\t\t\t\t<input class=\"input100\" type=\"text\" name=\"tel\" value=\"");
      out.print(seller_tel );
      out.write("\" readonly>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 validate-input\" data-validate=\"책 이름을 입력하세요.\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">책 이름</span>\n");
      out.write("\t\t\t\t\t<input class=\"input100\" type=\"text\" name=\"bookname\" value=\"");
      out.print(bookname );
      out.write("\" readonly>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 validate-input\" data-validate = \"출판사를 입력하세요.\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">출판사</span>\n");
      out.write("\t\t\t\t\t<input class=\"input100\" type=\"text\" name=\"publisher\" value=\"");
      out.print(publisher );
      out.write("\" readonly>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 validate-input\" data-validate = \"교수명을 입력하세요.\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">교수명</span>\n");
      out.write("\t\t\t\t\t<input class=\"input100\" type=\"text\" name=\"prof\" value=\"");
      out.print(prof );
      out.write("\" readonly>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 input100-select\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">책 상태</span>\n");
      out.write("\t\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t\t<input class=\"input100\" type=\"text\" name=\"prof\" value=\"");
      out.print(status );
      out.write("\" readonly>\n");
      out.write("\t\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<!-- <div class=\"wrap-input100 input100-select\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">가격</span>\n");
      out.write("\t\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t\t<select class=\"selection-2\" name=\"budget\">\n");
      out.write("\t\t\t\t\t\t\t<option>구두 협의</option>\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div> -->\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"wrap-input100 validate-input\" data-validate = \"상세정보를 입력하세요.\">\n");
      out.write("\t\t\t\t\t<span class=\"label-input100\">상세정보</span>\n");
      out.write("\t\t\t\t\t<textarea class=\"input100\" name=\"summary\" readonly>");
      out.print(summary );
      out.write("</textarea>\n");
      out.write("\t\t\t\t\t<span class=\"focus-input100\"></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"container-contact100-form-btn\">\n");
      out.write("\t\t\t\t\t<div class=\"wrap-contact100-form-btn\">\n");
      out.write("\t\t\t\t\t\t<div class=\"contact100-form-bgbtn\"></div>\n");
      out.write("\t\t\t\t\t\t");

							if(!stu_no.equals(session_stu_no)){
						
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"contact100-form-btn\" onclick='history.go(-1); return false;'>\n");
      out.write("\t\t\t\t\t\t\t\t\t<span>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t다른 책 보러가기\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-long-arrow-right m-l-7\" aria-hidden=\"true\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t</span>\n");
      out.write("\t\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t");

							}else{
						
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<button class=\"contact100-form-btn\" type=\"submit\">\n");
      out.write("\t\t\t\t\t\t\t\t<span>\n");
      out.write("\t\t\t\t\t\t\t\t\t수정하기\n");
      out.write("\t\t\t\t\t\t\t\t\t<i class=\"fa fa-long-arrow-right m-l-7\" aria-hidden=\"true\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t</span>\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"contact100-form-btn\" onclick = \"getVal('01') \">\n");
      out.write("\t\t\t\t\t\t\t\t<span>\n");
      out.write("\t\t\t\t\t\t\t\t\t삭제하기\n");
      out.write("\t\t\t\t\t\t\t\t\t<i class=\"fa fa-long-arrow-right m-l-7\" aria-hidden=\"true\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t</span>\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<div id=\"dropDownSelect1\"></div>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"vendor/jquery/jquery-3.2.1.min.js\"></script>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"vendor/animsition/js/animsition.min.js\"></script>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"vendor/bootstrap/js/popper.js\"></script>\n");
      out.write("\t<script src=\"vendor/bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"vendor/select2/select2.min.js\"></script>\n");
      out.write("\t<script>\n");
      out.write("\t\t$(\".selection-2\").select2({\n");
      out.write("\t\t\tminimumResultsForSearch: 20,\n");
      out.write("\t\t\tdropdownParent: $('#dropDownSelect1')\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"vendor/daterangepicker/moment.min.js\"></script>\n");
      out.write("\t<script src=\"vendor/daterangepicker/daterangepicker.js\"></script>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"vendor/countdowntime/countdowntime.js\"></script>\n");
      out.write("<!--===============================================================================================-->\n");
      out.write("\t<script src=\"js/main.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- Global site tag (gtag.js) - Google Analytics -->\n");
      out.write("<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-23581568-13\"></script>\n");
      out.write("<script>\n");
      out.write("  window.dataLayer = window.dataLayer || [];\n");
      out.write("  function gtag(){dataLayer.push(arguments);}\n");
      out.write("  gtag('js', new Date());\n");
      out.write("\n");
      out.write("  gtag('config', 'UA-23581568-13');\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

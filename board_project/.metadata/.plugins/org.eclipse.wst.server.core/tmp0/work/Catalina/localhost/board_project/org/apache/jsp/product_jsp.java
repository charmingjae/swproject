/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-10-15 11:32:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.ArrayList;

public final class product_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1090272076000L));
    _jspx_dependants.put("jar:file:/Users/chaminjae/Desktop/블록체인/board_project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/board_project/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1090214156000L));
    _jspx_dependants.put("jar:file:/Users/chaminjae/Desktop/블록체인/board_project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/board_project/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1090214156000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" <!--  0924 append -->\n");
      out.write(" <!-- 0924 append -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\ttable.type11 {\n");
      out.write("\t    border-collapse: separate;\n");
      out.write("\t    border-spacing: 1px;\n");
      out.write("\t    text-align: center;\n");
      out.write("\t    line-height: 1.5;\n");
      out.write("\t    margin: 20px 10px;\n");
      out.write("\t}\n");
      out.write("\ttable.type11 th {\n");
      out.write("\t    width: 155px;\n");
      out.write("\t    padding: 10px;\n");
      out.write("\t    font-weight: bold;\n");
      out.write("\t    vertical-align: top;\n");
      out.write("\t    color: #fff;\n");
      out.write("\t    background: #303D4B ;\n");
      out.write("\t}\n");
      out.write("\ttable.type11 td {\n");
      out.write("\t    width: 155px;\n");
      out.write("\t    padding: 10px;\n");
      out.write("\t    vertical-align: top;\n");
      out.write("\t    border-bottom: 1px solid #ccc;\n");
      out.write("\t    background: #eee;\n");
      out.write("\t}\n");
      out.write("\ta:link { color: red; text-decoration: none;}\n");
      out.write("\ta:visited { color: black; text-decoration: none;}\n");
      out.write("\ta:hover { color: blue; text-decoration: none;}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.10.1.min.js\"></script> <!--  0924 append -->\n");
      out.write("<script language = \"javascript\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("// SQL\n");
      out.write("// 0924 append\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t// TEST1\n");
      out.write("/*       $(function() {\n");
      out.write("         \n");
      out.write("        $(\"#checkJson\").click(function() {\n");
      out.write("          var form = document.writeform;\n");
      out.write("          //사람 정보\n");
      out.write("          var blockChain = new Array();\n");
      out.write("             \n");
      out.write("          var blockInfo = new Object();\n");
      out.write("           \n");
      out.write("          blockInfo.name = form.proname.value;\n");
      out.write("          blockInfo.location = form.proloc.value;\n");
      out.write("          blockInfo.count = form.pronumber.value;\n");
      out.write("             \n");
      out.write("          blockChain.push(blockInfo);\n");
      out.write("          \n");
      out.write("           \n");
      out.write("          //블록체인 정보를 넣음\n");
      out.write("          var totalInfo = new Object();\n");
      out.write("           \n");
      out.write("          totalInfo.block = blockChain;\n");
      out.write("           \n");
      out.write("          var jsonInfo = JSON.stringify(totalInfo);\n");
      out.write("          console.log(jsonInfo); //브라우저 f12개발자 모드에서 confole로 확인 가능\n");
      out.write("          alert(jsonInfo);\n");
      out.write("     \n");
      out.write("        });\n");
      out.write("         \n");
      out.write("      }); */\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("      \n");
      out.write("      \n");
      out.write("      \t\t\t\t\t\t\t\t\t\t\t\t// TEST2\n");
      out.write(" \t$(function() {\n");
      out.write("         \n");
      out.write("        $(\"#checkJson\").click(function() {\n");
      out.write("          var form = document.writeform;\n");
      out.write("          //사람 정보\n");
      out.write("          var blockChain = new Array();\n");
      out.write("             \n");
      out.write("          var blockInfo = new Object();\n");
      out.write("           \n");
      out.write("          blockInfo.sender = form.proname.value;\n");
      out.write("          blockInfo.recipient = form.proloc.value;\n");
      out.write("          blockInfo.amount = form.pronumber.value;\n");
      out.write("             \n");
      out.write("          blockChain.push(blockInfo);\n");
      out.write("          \n");
      out.write("          \n");
      out.write("          //블록체인 정보를 넣음\n");
      out.write("          var totalInfo = new Object();\n");
      out.write("           \n");
      out.write("          totalInfo/* .transactions */ = blockChain;\n");
      out.write("           \n");
      out.write("          var jsonInfo = JSON.stringify(totalInfo);\n");
      out.write("          console.log(jsonInfo); //브라우저 f12개발자 모드에서 confole로 확인 가능\n");
      out.write("          alert(jsonInfo);\n");
      out.write("          \n");
      out.write("          $.ajax({\n");
      out.write("        \t  type: \"POST\",\n");
      out.write("              dataType : \"JSON\",\n");
      out.write("              url : \"http://localhost:8000/transactions/new/\",\n");
      out.write("              data : jsonInfo,\n");
      out.write("              success : function(data){\n");
      out.write("            \t  alert(\"SUCCESS\");\n");
      out.write("              },\n");
      out.write("              error : function(e){\n");
      out.write("            \t  alert(\"문제가 일어났습니다.\");\n");
      out.write("              }\n");
      out.write("          });\n");
      out.write("        });\n");
      out.write("      });     \t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\n");
      out.write("//\n");
      out.write("\n");
      out.write("\n");
      out.write("function writeCheck()\n");
      out.write("{\n");
      out.write("\tvar form = document.writeform;\n");
      out.write("\tif(!form.proname.value)\n");
      out.write("\t{\n");
      out.write("\t\talert(\"제품 명을 선택하세요.\");\n");
      out.write("\t\tform.name.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(!form.proloc.value)\n");
      out.write("\t{\n");
      out.write("\t\talert(\"생산지를 적어주세요.\");\n");
      out.write("\t\tform.proloc.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif(!form.pronumber.value)\n");
      out.write("\t{\n");
      out.write("\t\talert(\"개수를 입력하세요.\");\n");
      out.write("\t\tform.pronumber.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tform.submit();\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function addRow(){\n");
      out.write("\t \n");
      out.write("\t   mytable = document.getElementById(\"table1\");  //행을 추가할 테이블\n");
      out.write("\t   row = mytable.insertRow(mytable.rows.length);  //추가할 행\n");
      out.write("\n");
      out.write("\t   \n");
      out.write("\t   cell1 = row.insertCell(0);  //실제 행 추가 여기서의 숫자는 컬럼 수\n");
      out.write("\t   cell2 = row.insertCell(1);\n");
      out.write("\t   cell3 = row.insertCell(2);\n");
      out.write("\n");
      out.write("\t   \n");
      out.write("       cell1.innerHTML = document.getElementsByName('proname')[0].value; //추가한 행에 원하는  요소추가\n");
      out.write("\t   cell2.innerHTML = document.getElementsByName('proloc')[0].value;\n");
      out.write("\t   cell3.innerHTML = document.getElementsByName('pronumber')[0].value;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("function statusChg(){\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\tif(confirm(\"상태를 변경하시겠습니까?\")){\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\telse{\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\t\n");
      out.write("\t");


		final int ROWSIZE = 4;
		final int BLOCK = 5;
		
		int pg = 1;
		
		if(request.getParameter("pg")!=null){
			pg=Integer.parseInt(request.getParameter("pg"));
		}
		
		int start = (pg*ROWSIZE) - (ROWSIZE -1);
		int end = (pg*ROWSIZE);
		
		int allPage = 0;
		
		int startPage = ((pg-1)/BLOCK*BLOCK)+1;
		int endPage = ((pg-1)/BLOCK*BLOCK)+BLOCK;
	
      out.write("\n");
      out.write("</script>\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write(" \t\t<title> 공산품 관리 </title>\n");
      out.write("\t</head>\n");
      out.write(" \t<body>\n");
      out.write(" \t\t<table>\n");
      out.write("\t\t\t <center>\n");
      out.write("\t\t\t \n");
      out.write("\t\t\t \n");
      out.write("\t\t\t\t <form name=writeform method=post action=\"write_ok.jsp\">\n");
      out.write("\t\t\t\t \t\t\t<br /><br /><br /><br /><br /><br /><br /><br /><br />\t\t\n");
      out.write("\t\t\t\t\t\t\t\t<label>제품 명 </label>\n");
      out.write("\t\t\t\t\t\t\t\t<input autocomplete=off list=\"product\" id=\"prodname\" name=\"proname\" placeholder=\"공산품 제품 명\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<datalist id=\"product\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"AIR JORDAN1\">AIR JORDAN1</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"YEEZY BOOST\">YEEZY BOOST</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t</datalist>\n");
      out.write("\t\t\t\t\t\t\t\t&emsp;&emsp;&emsp;\n");
      out.write("\t\t\t\t\t\t\t\t<label>생산지 </label>\n");
      out.write("\t\t\t\t\t\t\t \t<!-- <input autocomplete=off name=\"proloc\" placeholder=\"생산지\" /> -->\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"prodloc\" name=\"proloc\" size=1\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<optgroup label=\"ASIA\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"\" selected disabled hidden> 생산지를 선택하세요.</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"KR\">KR(KOREA)</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"CH\">CH(CHINA)</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</optgroup>\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t\t&emsp;&emsp;&emsp;\n");
      out.write("\t\t\t\t\t\t\t\t<label>개수 </label> \t\n");
      out.write("\t\t\t\t\t\t\t\t<input autocomplete=off id=\"prodnumber\" name=\"pronumber\" placeholder=\"공산품 개수\"/>\n");
      out.write("\t\t\t\t </form>\n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t </center>\n");
      out.write("\t\t</table>\n");
      out.write(" \t\t<br />\n");
      out.write("\t\t<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin:auto; text-align:center\">\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t  \t\t<tr>\n");
      out.write("\t   \t\t\t<td>\n");
      out.write("\t   \t\t\t\t<input type=button value=\"등록\" OnClick = \"javascript:writeCheck();\">\n");
      out.write("\t   \t\t\t\t<input type=button value=\"json append\" id=\"checkJson\">\n");
      out.write("\t   \t\t\t</td>\n");
      out.write("\t  \t\t</tr>\n");
      out.write("  \t\t<!-- <script type=\"text/javascript\" src\"./js/app.js\"></script> -->\n");
      out.write("\t\t</table>\n");
      out.write("\t\t<br />\n");
      out.write("\t\t\n");
      out.write("\t\t<table width=\"1000px\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin:auto; text-align:center\" class=\"type11\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>번호</th>\n");
      out.write("\t\t\t<th>생산품 명</th>\n");
      out.write("\t\t\t<th>생산지</th>\n");
      out.write("\t\t\t<th>개수</th>\n");
      out.write("\t\t\t<th>생산일</th>\n");
      out.write("\t\t\t<th>STATUS</th>\n");
      out.write("\t\t</tr>\n");
      out.write("  \t\t\t");
 
  			
  			request.setCharacterEncoding("euc-kr");
  			Class.forName("com.mysql.jdbc.Driver");
  			
  			String url = "jdbc:mysql://localhost:3306/pm?characterEncoding=UTF-8 & serverTimezone=UTC";
  			String id = "root";
  			String pass = "ckalswosla1";
  			String product_name = request.getParameter("proname");
  			String nation = request.getParameter("proloc");
  			String count = request.getParameter("pronumber");
  			
  			
  			
  			ResultSet rs = null;
  			ResultSet rs1 = null;
  			int total = 0;
  			/* Statement stmt = null; */
  			try {
  				
  	  			
  				Connection conn = DriverManager.getConnection(url,id,pass);
  				
  				/* final int ROWSIZE = 4;
  				final int BLOCK = 5;
  				
  				int pg = 1;
  				
  				if(request.getParameter("pg")!=null){
  					pg=Integer.parseInt(request.getParameter("pg"));
  				}
  				
  				int start = (pg*ROWSIZE) - (ROWSIZE -1);
  				int end = (pg*ROWSIZE);
  				
  				int allPage = 0;
  				
  				int startPage = ((pg-1)/BLOCK*BLOCK)+1;
  				int endPage = ((pg-1)/BLOCK*BLOCK)+BLOCK; */
  				
  				String sql = "SELECT * FROM PRODUCT WHERE NO >= " + start + " and NO <= " + end + " ORDER BY NO";
  				String sqlSort = "SELECT COUNT(*) FROM PRODUCT";
  				
  				Statement stmt = conn.createStatement();
  				Statement stmt1 = conn.createStatement();
  				
  				
  				rs1 = stmt1.executeQuery(sqlSort);
  				try{
  	  				if(rs1.next()){
  	  					total = rs1.getInt(1);
  	  				}
  				}catch(NullPointerException e){
  					out.println(e.toString());
  				}
  				
  				rs = stmt.executeQuery(sql);
  				
  				
  				while(rs.next())
  				{		
  			
      out.write("\n");
      out.write("  \t\t\t\t<tr>\n");
      out.write("  \t\t\t\t\t<td>");
      out.print( rs.getString("NO") );
      out.write("</td>\n");
      out.write("  \t\t\t\t\t<td>");
      out.print( rs.getString("PRODUCT_NAME") );
      out.write("</td>\n");
      out.write("  \t\t\t\t\t<td>");
      out.print( rs.getString("NATION") );
      out.write("</td>\n");
      out.write("  \t\t\t\t\t<td>");
      out.print( rs.getString("COUNT") );
      out.write("</td>\n");
      out.write("  \t\t\t\t\t<td>");
      out.print( rs.getString("CREATE_DATE") );
      out.write("</td>\n");
      out.write("  \t\t\t\t\t<td><a class=\"statusChg\" href=\"javascript:statusChg();\">\n");
      out.write("  \t\t\t\t\t");
      out.print( rs.getString("STATUS") );
      out.write("</a>\n");
      out.write("  \t\t\t\t\t</td>\n");
      out.write("  \t\t\t\t</tr> \t\t\t\t\t\n");
      out.write("  \t\t\t");

  				}
  				
  				allPage = (int)Math.ceil(total/(double)ROWSIZE);
  				
  				if(endPage > allPage){
  					endPage = allPage;
  				}
  				
  				rs.close();
  				rs1.close();
				stmt.close();
  				stmt1.close();
  				conn.close();
  			} catch(SQLException e) {
  			out.println( e.toString() );
  			}
  			
      out.write("\n");
      out.write("  \t\t\t</table>\n");
      out.write("  \t\t\t\n");
      out.write("  \t\t\t<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n");
      out.write("  \t\t\t\t<tr><td colspan=\"4\" height=\"5\"></td></tr>\n");
      out.write("  \t\t\t\t<tr>\n");
      out.write("  \t\t\t\t\t<td align=\"center\">\n");
      out.write("  \t\t\t\t\t\t");

  							if(pg>BLOCK){
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t\t<a href=\"product.jsp?pg=1\"> ◀◀ </a>\n");
      out.write("  \t\t\t\t\t\t\t<a href=\"product.jsp?pg=");
      out.print(startPage-1);
      out.write("\"> ◀ </a>\n");
      out.write("  \t\t\t\t\t\t");

  							}
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t\n");
      out.write("  \t\t\t\t\t\t");

  							for(int i=startPage;i<=endPage;i++){
  								if(i==pg){
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t\t\t<b> ");
      out.print( i );
      out.write("&nbsp; </b>\n");
      out.write("  \t\t\t\t\t\t");

  								}else{
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t\t\t\t<a href=\"product.jsp?pg=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print( i );
      out.write("&nbsp;</a>\n");
      out.write("  \t\t\t\t\t\t");

  								}
  							}
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t\n");
      out.write("  \t\t\t\t\t\t");

  							if(endPage<allPage){
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t\t<a href=\"product.jsp?pg=");
      out.print(endPage+1 );
      out.write("\"> ▶ </a>\n");
      out.write("  \t\t\t\t\t\t\t<a href=\"product.jsp?pg=");
      out.print(allPage );
      out.write("\"> ▶▶ </a>\n");
      out.write("  \t\t\t\t\t\t");

  							}
  						
      out.write("\n");
      out.write("  \t\t\t\t\t\t</td>\n");
      out.write("  \t\t\t\t\t\t</tr>\n");
      out.write("  \t\t\t</table>\n");
      out.write("\t</body> \n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
